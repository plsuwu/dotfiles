(include "vars.yuck")

(defwidget bar-one []
    (centerbox :orientation "h" :class "body"
        (left)
        (center)
        (right)))

(defwidget bar-two []
    (centerbox :orientation "h" :class "body"
        (left)
        (center)
        (right-b)))

(defwidget bar-three []
    (centerbox :orientation "h" :class "body"
        (left)
        (center)
        (right-b)))


(defwidget left []
    (box
         :orientation "h"
         :space-evenly false
         :halign "start"
         :spacing 2
        (workspaces)))

(defwidget center []
    (box
        (label :text "")))

(defwidget right []
    (box :orientation "h"
         :space-evenly false
         :halign "end"
         :spacing 2
         (network)
         (datetime)
         (power-ctl)))

(defwidget right-b []
    (box :orientation "h"
         :space-evenly false
         :halign "end"
         :spacing 2
         (network)
         (datetime)))

(defwidget workspaces []
    (literal :content {wmstate} ))

(defwidget datetime []
    (box :orientation "h" :space-evenly false
         :halign "end" :spacing 2 :class "datetime"
        (label :class "time" :text "${time}")
        (label :class "date" :text "${date}")))

(defwidget network []
    (box :orientation "h" :space-evenly false
         :halign "fill" :spacing 1 :class "network"
         (label :class ""
                :text "eth0.")
            (label :class "network-icon ${netstatus == 'o' ? 'network-o' : 'network-x'}"
                   :text "${netstatus == 'o' ? '󰈁' : '󰈂'}")))

(defwidget power-ctl []
    (box :orientation "h" :space-evenly false
         :halign "end" :class "power"
         (button :class "${power-menu-state ? 'power-menu-btn btn-focus' : 'power-menu-btn'}"
                 :onclick "eww open --toggle power-menu && eww update power-menu-state=${!power-menu-state}"
            (label :class "power-menu-icon"
                   :text "${power-menu-state ? '󰍝' : '󰍠'}"))))

(defwidget power-menu []
    (box :orientation "v" :space-evenly false
         :halign "fill" :class "power-menu-window" :hexpand true :vexpand true
         (toggle-menu :window "power-menu" :btn-text "x" :varname "power-menu-state" :varstate "${power-menu-state}")
         (box :class "power-menu-group" :orientation "v" :space-evenly true

            ;; TODO: make these actual options
            (power-menu-btn :classnames "power-menu-item" :text "sleep" :icon "" :cmd "scripts/sleep.sh &")
            (power-menu-btn :classnames "power-menu-item" :text "log out" :icon "󰩈" :cmd "scripts/logout.sh &")
            (power-menu-btn :classnames "power-menu-item" :text "reboot" :icon "" :cmd "systemctl reboot")
            (power-menu-btn :classnames "power-menu-item" :text "shut down" :icon "" :cmd "systemctl poweroff"))))

(defwidget power-menu-btn [text icon cmd ?classnames]
    (box :orientation "h" :hexpand true
        (button :class "${classnames}" :onclick "${cmd}"
            (box :space-evenly true :halign "fill"
                (box :halign "start" :class "p-menu-btn-text"
                    (label  :text text))
                (box :halign "end" :class "pm-btn-icon"
                    (label :text icon))))))

(defwidget toggle-menu [window btn-text varname varstate ?classnames]
    (box :orientation "h" :space-evenly false :halign "end"
        (button :class "toggle-btn ${classnames}" :onclick "eww open --toggle ${window} && eww update ${varname}=${!varstate}"
            (label :class "toggle-btn-text" :text btn-text))))

